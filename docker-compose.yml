services:
  postgres:
    image: postgres:18
    container_name: webshop_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  data_generator:
    build: .
    container_name: webshop_data_generator
    command: node generateMockData.js
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HOST: postgres
      PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy

  app:
    build: .
    container_name: webshop_express
    command: node app.js
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HOST: postgres
      PORT: 5432
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      data_generator:
        condition: service_completed_successfully

volumes:
  postgres_data:
